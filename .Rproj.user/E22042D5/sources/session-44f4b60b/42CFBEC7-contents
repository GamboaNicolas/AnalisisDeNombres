#CARGA DE PAQUETES----
library(readxl)
library(tidyverse)
library(openxlsx)

#CARGA DE LA BASE DE NACIMIENTOS(recordar setear directorio)----
setwd("Z:/pasante Nico/Nombres mas populares/2021")
datos <- read_xls("./Base_nacimientos 2021/nacimientos_anuario_2021-dataset nominal_20221221.xls")

datos$nombre <- toupper(datos$nombre)

View(datos)

colnames(datos)

# FILTRADO Y TRABAJO DE LA BASE----

## seleccionamos columnas de inter?s-----

datos_filtrados <- datos %>% select(
  "nombre", "apellido", "Fecha nacimiento.", "Ocurrio en.", "Edad de la madre.","Lugar de residencia.",
  "regcivil", "acta","tiporegistro" , "Sexo.", "departamento", "localidad", "Distrito municipal.","Seccional policial."
)



## Guardo los nombres originales en una columna----
datos_filtrados$nombre_tipeado <- datos_filtrados$nombre

names(datos_filtrados)

datos_filtrados <- datos_filtrados[,c(15,1:14)]


## Filtro los registros con dato faltante en el nombre
datos1 <- datos_filtrados %>% filter(
  is.na(nombre) == F,
  nombre != "SIN DATOS",
  nombre != "SIN DATO",
  nombre != "DESCONOCIDO"
)

datosFaltantes <- datos_filtrados %>% filter(
  is.na(nombre) == T |
    nombre == "SIN DATOS" |
    nombre == "SIN DATO" |
    nombre == "DESCONOCIDO"
)


lista_nombres <- str_split(datos1$nombre, " ")


#
## Elimino las palabras vacias y articuos/enlaces para que no se consideren como un nombre mas-------
#

descartes <- toupper(
  c("","EL", "LOS", "LA", "LAS", "LO", "A", "AL", "DEL",
    "UN", "UNA", "UNOS", "UNAS",
    "a", "ante", "bajo", "cabe", "con", "contra", "de", "desde",
    "durante", "en", "entre", "hacia", "hasta", "mediante",
    "para", "por", "segun", "sin", "so", "sobre", "tras", "versus", "via")
)

cuenta <- 0
for(i in 1:length(lista_nombres)){
  descarte <- NULL
  for(j in 1:length(lista_nombres[[i]])){
    if(lista_nombres[[i]][j] %in% descartes){
      descarte <- c(descarte,-j)
      cuenta <- cuenta+1
    }
  }
  if(!is.null(descarte)){
    lista_nombres[[i]] <- lista_nombres[[i]][descarte]
  }
}

print(cuenta)

#Volver a correr hasta que "cuenta" sea 0(Esto no deber?a ser necesario)



#
## Extraemos los nombres compuestos---- esto posiblemente sea eliminado
#

nombresEnlace <- list()
pos <- 0

for(i in 1:length(lista_nombres)){
  for(j in 1:length(lista_nombres[[i]])){
    if(lista_nombres[[i]][j] %in% enlaces){
      pos <- pos + 1
      nombresEnlace[[pos]] <- lista_nombres[[i]]
      break
    }
  }
}

#
### Ubicamos y corregimos sus nombres
#


pos <- 0

filtro <- !logical(nrow(datos1))

cuenta <- 0

for(i in 1:length(lista_nombres)){
  pos <- pos + 1
  for(j in 1:length(lista_nombres[[i]])){
    if(lista_nombres[[i]][j] %in% enlaces){
      cuenta <- cuenta + 1
      filtro[pos] <- FALSE
      break
    }
  }
}


lista_nombres[[which(!filtro)[1]]] <- c("VICTORIA" ,"DEL PILAR")

lista_nombres[[which(!filtro)[2]]] <- c("CALA" ,"DEL VALLE")

lista_nombres[[which(!filtro)[3]]] <- c("LUZ", "EMILIA" ,"DEL ROS")

lista_nombres[[which(!filtro)[4]]] <- c("MARIA" ,"DEL PILAR")

lista_nombres[[which(!filtro)[5]]] <- c("BIANCA" ,"DEL VALLE")

lista_nombres[[which(!filtro)[6]]] <- c("MARIA" ,"DE LOS ANGELES", "XIOMARA")

lista_nombres[[which(!filtro)[7]]] <- c("JUAN" ,"DE DIOS")

lista_nombres[[which(!filtro)[8]]] <- c("CIELO", "PALOMA" ,"DEL CARMEN")

lista_nombres[[which(!filtro)[9]]] <- c("MARIA", "DE LOS ANGELES")

lista_nombres[[which(!filtro)[10]]] <- c("MARIA" ,"DEL ROSARIO")

lista_nombres[[which(!filtro)[11]]] <- c("CANDELARIA", "DEL ALMA", "MIA")

lista_nombres[[which(!filtro)[12]]] <- c("MILAGROS", "DE LOS ANGELES")



#
## Buscamos cuantos nombres tiene una persona como maximo-----
#

maximo <- 0

for (i in 1:(length(lista_nombres))){
  if(length(lista_nombres[[i]])>maximo){
    maximo <- length(lista_nombres[[i]])
  }
}

print(maximo)

#
## Creamos las columnas nombre 1, nombre 2 y nombre 3-----
#

length(lista_nombres)==nrow(datos1)

datos2 <- datos1

datos2$Primero <- rep(NA,length(lista_nombres))
datos2$Segundo <- rep(NA,length(lista_nombres))
datos2$Tercero <- rep(NA,length(lista_nombres))
datos2$cantidad_nombres <- rep(NA,length(lista_nombres))

p <- 0
for(i in 1:length(lista_nombres)){
  datos2$Primero[i] <- lista_nombres[[i]][1]
  datos2$Segundo[i] <- lista_nombres[[i]][2]
  datos2$Tercero[i] <- lista_nombres[[i]][3]
  datos2$cantidad_nombres[i] <- length(lista_nombres[[i]])
  if(round(i/length(lista_nombres)*100)>p){
    p <- round(i/length(lista_nombres)*100)
    print(paste0(p,"%"))
  }
}


#
# MODIFICACIONES/CORRECCIONES DE NOMBRES-----
#

# En este punto primero hay que crear DOS archivos excel en el que se corregir?n
# los nombres que haga falta de varones y de mujeres.

unNombre <- datos2[!is.na(datos2$Primero),]
dosNombres <- datos2[!is.na(datos2$Segundo),]
tresNombres <- datos2[!is.na(datos2$Tercero),]

unNombre$nombre <- unNombre$Primero
dosNombres$nombre <- dosNombres$Segundo
tresNombres$nombre <- tresNombres$Tercero

nombres_todos <- rbind(unNombre,dosNombres,tresNombres)


nombres_todos_M <- nombres_todos %>%
  filter(
    Sexo. == "1 - Masculino"
  )

nombres_todos_F <- nombres_todos %>%
  filter(
    Sexo. == "2 - Femenino"
  )

nombres_hombres <- as.data.frame(table(nombres_todos_M$nombre))

nombres_mujeres <- as.data.frame(table(nombres_todos_F$nombre))

write.xlsx(nombres_hombres, "./correciones/correciones_hombres.xlsx")
write.xlsx(nombres_mujeres, "./correciones/correciones_mujeres.xlsx")

rm(unNombre,dosNombres,tresNombres,
   nombres_todos,nombres_todos_F,nombres_todos_M,
   nombres_mujeres,nombres_hombres)

# Para la correci?n, crear una copia de ambos archivos e imitar el formato de
# los archivos "correciones_hombres_Revisi?n.xlsm" (revisar que la distancia de levenshtein
# fue agregada en "modulo1"): alt+f11 / instertar / modulo  y ac? copiar lo que est? en modulo1

# La correci?n se har? utilizando la distancia de levenshtein para los nombres
# con mayor frecuencia

# Una vez realizada la correci?n de los nombres, crear una copia de este ultimo
# archivo e imitar el formato de "correciones_hombres_R.xlsx".
# Recordar eliminar las filas que no tengan ninguna correci?n.



## Primera correci?n de nombres POSTERIOR A LA CORRECI?N MANUAL----

# Ac? se corrigen los nombres con situaciones espec?ficas antes de corregir todos
# los nombres

for (i in 1:nrow(datos1)) {
  if(datos1[i,"Sexo."] == "1 - Masculino"){

    if(datos1[i,"nombre"] == "CATALINA"){datos1[i,"nombre"]  <- "CATALINO"
    print("1")}
    if(datos1[i,"nombre"] == "IGNACIO JULIA"){datos1[i,"nombre"] <- "IGNACIO JULIO"
    print("2")}
    if(datos1[i,"nombre"] == "STEFANO LUCIA"){datos1[i,"nombre"] <- "STEFANO LUCIO"
    print("3")}
    if(datos1[i,"nombre"] == "THIAGOPABLO"){datos1[i,"nombre"] <- "THIAGO PABLO"
    print("4")}
    if(datos1[i,"nombre"] == "DEMIR JUANCRUZ"){datos1[i,"nombre"]  <- "DEMIR JUAN CRUZ"
    print("5")}
    if(datos1[i,"nombre"] == "ENZO VALENTINA"){datos1[i,"nombre"]  <- "ENZO VALENTINO"
    print("6")}
    if(datos1[i,"nombre"] == "TOMAS VALENTINA"){datos1[i,"nombre"] <- "TOMAS VALENTINO"
    print("7")}
    if(datos1[i,"nombre"] == "VALENTINA"){datos1[i,"nombre"] <- "VALENTINO"
    print("8")}

  }else{

    if(datos1[i,"nombre"] == "ARIEL ALMAMIA"){datos1[i,"nombre"] <- "ARIEL ALMA MIA"
    print("9")}
    if(datos1[i,"nombre"] == "BELLALUZ"){datos1[i,"nombre"]  <- "BELLA LUZ"
    print("10")}
    if(datos1[i,"nombre"] == "CAMILO"){datos1[i,"nombre"]  <- "CAMILA"
    print("11")}
  }

}

# Volvemos a trabajar los datos igual que antes pero con estos nombres corregidos----

lista_nombres <- str_split(datos1$nombre, " ")

head(lista_nombres)
length(lista_nombres)

#
## Elimino las palabras vacias para que no se consideren como un nombre mas-------
#


cuenta <- 0
for(i in 1:length(lista_nombres)){
  descarte <- NULL
  for(j in 1:length(lista_nombres[[i]])){
    if(lista_nombres[[i]][j] == ""){
      descarte <- c(descarte,-j)
      cuenta <- cuenta+1
    }
  }
  if(!is.null(descarte)){
    lista_nombres[[i]] <- lista_nombres[[i]][descarte]
  }
}

print(cuenta)

#Volver a correr hasta que "cuenta" sea 0

#
## Buscamos cuantos nombres tiene una persona como maximo-----
#

maximo <- 0

for (i in 1:(length(lista_nombres))){
  if(length(lista_nombres[[i]])>maximo){
    maximo <- length(lista_nombres[[i]])
  }
}

print(maximo)

#
## Creamos las columnas nombre 1, nombre 2 y nombre 3-----
#

length(lista_nombres)==nrow(datos1)

datos2 <- datos1

datos2$Primero <- rep(NA,length(lista_nombres))
datos2$Segundo <- rep(NA,length(lista_nombres))
datos2$Tercero <- rep(NA,length(lista_nombres))
datos2$cantidad_nombres <- rep(NA,length(lista_nombres))

p <- 0
for(i in 1:length(lista_nombres)){
  datos2$Primero[i] <- lista_nombres[[i]][1]
  datos2$Segundo[i] <- lista_nombres[[i]][2]
  datos2$Tercero[i] <- lista_nombres[[i]][3]
  datos2$cantidad_nombres[i] <- length(lista_nombres[[i]])
  if(round(i/length(lista_nombres)*100)>p){
    p <- round(i/length(lista_nombres)*100)
    print(paste0(p,"%"))
  }
}


# CORRECIONES DE NOMBRES UNA VEZ QUE EST? TODO LISTO------

reemplazos_hombres <- read_xlsx("./correciones/correciones_hombres_R.xlsx")

reemplazos_mujeres <- read_xlsx("./correciones/correciones_mujeres_R.xlsx")


datos2_hombres <- datos2 %>%
  filter(Sexo. == "1 - Masculino")

for (i in 1:nrow(datos2_hombres)) {
  for (j in c("Primero", "Segundo", "Tercero")) {
    if(is.na(datos2_hombres[i,j]) || !(datos2_hombres[i,j] %in% reemplazos_hombres$Nombre)){
      next
    }
    indice <- match(datos2_hombres[i,j],reemplazos_hombres$Nombre)
    datos2_hombres[i,j] <- reemplazos_hombres$Corregido[indice]
  }

}



datos2_mujeres <- datos2 %>%
  filter(Sexo. != "1 - Masculino")

for (i in 1:nrow(datos2_mujeres)) {
  for (j in c("Primero", "Segundo", "Tercero")) {
    if(is.na(datos2_mujeres[i,j]) || !(datos2_mujeres[i,j] %in% reemplazos_mujeres$Nombre)){
      next
    }
    indice <- match(datos2_mujeres[i,j],reemplazos_mujeres$Nombre)
    datos2_mujeres[i,j] <- reemplazos_mujeres$Corregido[indice]
  }
}

datos3 <- rbind(datos2_hombres,datos2_mujeres)

nrow(datos3) == nrow(datos2)

datosFaltantes$Primero <- rep(NA,nrow(datosFaltantes))
datosFaltantes$Segundo <- rep(NA,nrow(datosFaltantes))
datosFaltantes$Tercero <- rep(NA,nrow(datosFaltantes))
datosFaltantes$cantidad_nombres <- rep("No disponible",nrow(datosFaltantes))

colnames(datosFaltantes) == colnames(datos3)

datos_print <- rbind(datos3,datosFaltantes)

View(datos_print)

# en caso de querer ver la base con las columnas de nombres agregadas
# write.xlsx(datos_print, "./Bases_creadas/base_nombres_arreglada.xlsx)




# CREAMOS LA BASE FINAL PARA EL AN?LISIS-----
names(datos_print)

data_long <- gather(datos_print[,c(-3:-1)],
                    posicion,
                    nombre_ind,
                    Primero:Tercero,
                    na.rm = T
)

rm(datos1,datos2,datos2_hombres,datos2_mujeres,datos3,datosFaltantes)
rm(datos_filtrados)



faltantes_final <- datos_print %>%
  filter(is.na(Primero)) %>%
  select(c(-3:-1), -Segundo, -Tercero, -Primero)
faltantes_final$posicion <- NA
faltantes_final$nombre_ind <- NA

names(faltantes_final) == names(data_long)
names(datos_print)


nombres_final <- rbind(data_long, faltantes_final)
nombres_final$ID <- c(1:nrow(nombres_final))



write.xlsx(nombres_final,file = "nombres_individuales1*.xlsx")


